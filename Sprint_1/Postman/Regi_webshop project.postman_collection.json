{
	"info": {
		"_postman_id": "4241d351-9010-4fa3-95ad-f4f041033e96",
		"name": "webshop project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43262046"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"pm.test(\"Response body contains 'access_token'\", function () {",
							"    pm.expect(pm.response.text()).to.include('access_token');",
							"});",
							"pm.test(\"Response body contains 'refresh_token'\", function () {",
							"    pm.expect(pm.response.text()).to.include('refresh_token');",
							"});",
							"",
							"",
							"let responseData = pm.response.json();",
							"console.log(responseData);",
							"let current_access_token = pm.environment.get(\"access_token\");",
							"console.log(current_access_token);",
							"pm.environment.set(\"access_token\", responseData[\"access_token\"]);",
							"let changed_access_token = pm.environment.get(\"access_token\");",
							"console.log(changed_access_token);",
							"",
							"let current_refresh_token = pm.environment.get(\"refresh_token\");",
							"console.log(current_refresh_token);",
							"pm.environment.set(\"refresh_token\", responseData[\"refresh_token\"]);",
							"let changed_refresh_token = pm.environment.get(\"refresh_token\");",
							"console.log(changed_refresh_token);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}users/login?userName={{username}}&password={{password}}",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "userName",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 415\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}users/login?userName={{username}}&password={{password}}",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "userName",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 415\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}users/login?userName={{username}}&password={{password}}",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "userName",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 415\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}users/login?userName={{username}}&password={{password}}",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "userName",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const now = new Date();",
							"",
							"const timestamp = now.getFullYear().toString()",
							"    + String(now.getMonth() + 1).padStart(2, '0')",
							"    + String(now.getDate()).padStart(2, '0')",
							"    + String(now.getHours()).padStart(2, '0')",
							"    + String(now.getMinutes()).padStart(2, '0')",
							"    + String(now.getSeconds()).padStart(2, '0');",
							"",
							"const username = `u_${timestamp}`;",
							"const email = `u${timestamp}@test.hu`;",
							"",
							"pm.environment.set(\"randomUsername\", username);",
							"pm.environment.set(\"randomEmail\", email);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userName\": \"{{randomUsername}}\",\n  \"email\": \"{{randomEmail}}\",\n  \"password\": \"Teszt123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}users",
					"host": [
						"{{BaseURL}}users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}users/userData",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"userData"
					]
				}
			},
			"response": []
		}
	]
}