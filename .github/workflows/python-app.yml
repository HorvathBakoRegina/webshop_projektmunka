# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # Ezzel manuálisan is elindíthatod a workflow-t

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Allure CLI
      uses: actions/setup-java@v3
      with:
        distribution: 'jdk'
        java-version: '11'
    - run: |
        curl -o allure.zip https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.zip # A verziószámot ellenőrizd a legfrissebb kiadással
        sudo mkdir -p /opt/allure
        sudo unzip allure.zip -d /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest allure-pytest selenium mysql-connector-python bcrypt 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./Sprint_1/compose.yaml"
    - name: Restore the dump
      run: |
        cat ./Sprint_1/webshop_sprint1_admin.sql | docker exec -i database /usr/bin/mysql -u root --password=test1234 webshop
    - name: Run Pytest with Allure
      run: PYTHONPATH=. pytest -v --alluredir=allure-results # Fontos a -v a részletes kimenethez
    - name: Generate Allure Report # Új lépés
      if: always()
      run: |
        allure generate allure-results -o allure-report
        ls -la # Nézzük meg, mi jött létre
    - name: Deploy report to Github Pages # Módosítjuk a nevet
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
      with:
        publish_dir: allure-report # Javítva a publish_dir-t
        
