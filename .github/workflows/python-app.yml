# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install allure commandline
      run: |
        sudo apt-get update
        sudo apt-get install -y default-jre
        npm install -g allure-commandline --save-dev

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with pytest and generate Allure results
      run: |
        mkdir -p ./reports/allure-results
        pytest --alluredir=./reports/allure-results

    - name: Generate Allure HTML report
      run: |
        mkdir -p ./reports/allure-history
        allure generate ./reports/allure-results --clean -o ./reports/allure-history

    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./Sprint-1/compose.yaml"

    - name: Restore the dump
      run: |
          cat ./Sprint-1/dump.sql | docker exec -i database /usr/bin/mysql -u root --password=test1234 moovsmart

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./reports/allure-history
